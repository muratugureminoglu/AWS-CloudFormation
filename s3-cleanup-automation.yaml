AWSTemplateFormatVersion: '2010-09-09'
Description: Clean S3 Bucket Every 3 Days

Resources:
  S3BucketCleaningFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: S3BucketCleaningFunction
      Runtime: python3.11
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import boto3

          def clean_s3_bucket(bucket_name):
              s3 = boto3.resource('s3')
              bucket = s3.Bucket(bucket_name)
              
              for obj in bucket.objects.all():
                  obj.delete()

          def lambda_handler(event, context):
              bucket_name = 'your-bucket-name'
              clean_s3_bucket(bucket_name)
              return {
                  'statusCode': 200,
                  'body': 'S3 bucket cleaned successfully'
              }

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: LambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: S3BucketCleaningPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:ListBucket'
                  - 's3:DeleteObject'
                Resource: 
                  - 'arn:aws:s3:::your-bucket-name'
                  - 'arn:aws:s3:::your-bucket-name/*'

  S3BucketCleaningRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Name: S3BucketCleaningRule
      Description: Rule to trigger S3 bucket cleaning every 3 days
      ScheduleExpression: rate(3 days)
      State: ENABLED
      Targets:
        - Arn: !GetAtt S3BucketCleaningFunction.Arn
          Id: TargetFunction
